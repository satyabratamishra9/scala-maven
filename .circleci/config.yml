version: 2.1 
general:

orbs:
  aws-ecr: circleci/aws-ecr@6.5.0

jobs:
  test:

    working_directory: ~/repo 

    docker:
    - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap size
      JVM_OPTS: -Xmx3200m
            
    steps:
      - checkout

      # download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # use latest cache if no exact match found
            - v1-dependencies-

      - run:
          name: run unit tests 
          command: mvn clean test

     # save build cache
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2 

      # check code quality
      - run:
          name: Install Sonarqube scanner
          command: |
             wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip
             unzip sonar-scanner-cli-3.2.0.1227-linux.zip
             
   #      - run:
#          name: Run Sonarqube scanner
#          command: |
#                 export SONAR_SCANNER_OPTS="-Xmx512m"
#                 eval ./sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner \
#                 -Dsonar.projectKey=scala-maven-example \
#                -Dsonar.sources=. \
#                 -Dsonar.host.url=${SONAR_SERVER} \
#                 -Dsonar.login=${SONARQUBE_TOKEN} $SONAR_SCANNER_OPTS_CUSTOM

      - run: 
          name: create package
          command: mvn clean install -Dmaven.test.skip=true

      - run:
          name: save package to an archive
          command: |
            mkdir -p archieve
            pwd
            ls -lart ~/repo/target
            cp -r ~/repo/target/*.jar ~/repo/archieve/
            
      - persist_to_workspace:
          root: .
          paths:
            - archieve

  build:
    
    working_directory: ~/repo 

    docker:
    - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap size
      JVM_OPTS: -Xmx3200m
            
    steps:
      - checkout

      - attach_workspace:
          at: workspace

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # use latest cache if no exact match found
            - v1-dependencies-
  
      - store_artifacts:
          path: ~/repo/workspace/archieve/
          destination: JARS      
      
workflows:
  version: 2.1
  test-and-build:
    jobs:
    - test
    - build:
        requires:
          - test
        filters:
          branches:
            only:
            - master
            - develop
    - aws-ecr/build-and-push-image:
        account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
        create-repo: false
        path: .
        region: AWS_REGION_ENV_VAR_NAME
        repo: scala-maven
        tag: 'latest,myECRRepoTag'
        requires:
          - build
        filters:
          branches:
            only:
            - master
            - develop
